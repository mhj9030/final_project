<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="company">
	<sql id="where-list">
		<if test="searchKey=='cName'">
			instr(cName, #{searchValue})&gt;=1
		</if>
		<if test="searchKey=='cSize'">
			instr(cSize, #{searchValue})=1
		</if>
		<if test="searchKey=='maName'">
			instr(maName, #{searchValue})=1
		</if>
		<if test="searchKey=='subName'">
			instr(subName, #{searchValue})=1
		</if>
	</sql>

	<!-- 기업 등록 -->
	<insert id="insertCompany" parameterType="com.final_project.company.Company">
		insert into company(cSerial, cNum, cCeo, cName, cPeople, cCreated, cSize, cTel, cProfit, cIntro, mId, subCode, cDescription, cAddress)
  			values(#{cSerial}, com_seq.nextval, #{cCeo}, #{cName}, #{cPeople}, #{cCreated}, #{cSize}, #{cTel}, #{cProfit}, #{cIntro}, #{mId}, #{subCode}, #{cDescription}, #{cAddress})
	</insert>
	
	<!-- 기업 이미지 파일 등록 -->
	<insert id="insertComImage" parameterType="com.final_project.company.Company">
		insert into com_image(ciNum, cLogoImage, cLogoOriginalFilename, cCoverImage, cCoverOriginalFilename, cSerial)
			values(com_image_seq.nextval, #{cLogoImage, jdbcType=VARCHAR}, #{cLogoOriginalFilename, jdbcType=VARCHAR}, #{cCoverImage, jdbcType=VARCHAR}, #{cCoverOriginalFilename, jdbcType=VARCHAR}, #{cSerial})
	</insert>
	
	<!-- 검색한 기업 수 -->
	<select id="companyCount" parameterType="map" resultType="Integer">
		select nvl(count(*), 0) from company c
			join sub_bu_class sb on c.subCode=sb.subCode
			join main_bu_class mb on sb.maCode=mb.maCode
			<where>
				<if test="searchValue!=null and searchValue!='' ">
	     	    	<include refid="where-list"/>
	     		</if>
			</where>
	</select>
	
	<!-- 기업 검색 리스트 -->
	<select id="listCompany" parameterType="map" resultType="com.final_project.company.Company">
		select * from(
			select rownum rnum, tb.* from(
		    	select distinct c.cSerial, cNum, cName, cDescription, sb.subName, mb.maName, ci.cLogoImage, ci.cCoverImage, nvl(count(ce.cSerial) over(partition by c.cSerial), 0) employ_cnt
		        	from company c
		        	join sub_bu_class sb on c.subCode=sb.subCode
		          	join main_bu_class mb on sb.maCode=mb.maCode
		          	join com_image ci on c.cSerial=ci.cSerial
		          	left outer join com_employ ce on c.cSerial=ce.cSerial
		          	<where>
						<if test="searchValue!=null and searchValue!='' ">
			     	    	<include refid="where-list"/>
			     		</if>
					</where>
					<if test="order=='recent'">
						order by cNum desc
					</if>
					<if test="order=='employ'">
						order by employ_cnt desc, cNum desc
					</if>
		<![CDATA[
				)tb where rownum<=#{end}
		)where rnum>=#{start}
		]]>
	</select>
	
	<!-- 기업 정보 가져오기(기업 번호) -->
	<select id="readCompanyNum" parameterType="Integer" resultType="com.final_project.company.Company">
		select c.cSerial, cNum, cCeo, cName, cPeople, to_char(cCreated, 'YYYY-MM-DD') cCreated, cSize, cTel, cProfit, cIntro, cAddress, sb.subName, mb.maName, ci.cLogoImage, ci.cCoverImage
			from company c
		  	join sub_bu_class sb on c.subCode=sb.subCode
		  	join main_bu_class mb on sb.maCode=mb.maCode
		  	join com_image ci on c.cSerial=ci.cSerial
		  	where cNum=#{cNum}
	</select>
	
	<!-- 기업 정보 가져오기(사업자 번호) -->
	<select id="readCompanySerial" parameterType="String" resultType="com.final_project.company.Company">
		select c.cSerial, mId, cNum, cCeo, cName, cPeople, to_char(cCreated, 'YYYY-MM-DD') cCreated, cSize, cTel, cProfit, 
			cIntro, cDescription, cAddress, c.subCode, sb.subName, mb.maName, ci.cLogoImage, ci.cCoverImage, ci.cLogoOriginalFilename, ci.cCoverOriginalFilename
			from company c
		  	join sub_bu_class sb on c.subCode=sb.subCode
		  	join main_bu_class mb on sb.maCode=mb.maCode
		  	join com_image ci on c.cSerial=ci.cSerial
		  	where c.cSerial=#{cSerial}
	</select>
	
	<!-- 기업 정보 수정 -->
	<update id="updateCompany" parameterType="com.final_project.company.Company">
		update company set cCeo=#{cCeo}, cName=#{cName}, cPeople=#{cPeople}, 
			cCreated=#{cCreated}, cSize=#{cSize}, cTel=#{cTel}, cProfit=#{cProfit}, 
			cIntro=#{cIntro}, subCode=#{subCode}, cDescription=#{cDescription}, 
			cAddress=#{cAddress}
			where cSerial=#{cSerial}
	</update>
	
	<!-- 기업 이미지 수정 -->
	<update id="updateComImage" parameterType="com.final_project.company.Company">
		update com_image set cLogoImage=#{cLogoImage, jdbcType=VARCHAR}, 
			cLogoOriginalFilename=#{cLogoOriginalFilename, jdbcType=VARCHAR}, 
			cCoverImage=#{cCoverImage, jdbcType=VARCHAR}, 
			cCoverOriginalFilename=#{cCoverOriginalFilename, jdbcType=VARCHAR}
			where cSerial=#{cSerial}
	</update>
	
	<!-- 채용 등록 -->
	<insert id="insertComEmploy" parameterType="com.final_project.company.Employ">
		insert into com_employ(ceNum, ceSubject, cePeople, ceType, ceStart, ceEnd, 
			cePay, cePlace, cePrefere, ceEtc, resumeForm, resumeFile, resumeOriginalName, 
			cSerial, atCode, subCode)
  			values(com_employ_seq.nextval, #{ceSubject}, #{cePeople}, #{ceType}, 
  				#{ceStart}, #{ceEnd}, #{cePay}, #{cePlace}, #{cePrefere}, #{ceEtc}, 
  				#{resumeForm}, #{resumeFile, jdbcType=VARCHAR}, 
  				#{resumeOriginalName, jdbcType=VARCHAR}, #{cSerial}, #{atCode}, 
  				#{subCode})
	</insert>
	
	<!-- 채용 수 -->
	<select id="employCount" parameterType="map" resultType="Integer">
		select nvl(count(*), 0) from com_employ
  			where cSerial=#{cSerial}
  			<if test="searchValue!=null and searchValue!='' ">
	     		and instr(ceSubject, #{searchValue})&gt;=1
	     	</if>
	</select>
	
	<!-- 채용 리스트 -->
	<select id="listComEmploy" parameterType="map" resultType="com.final_project.company.Employ">
		select * from(
			select rownum rnum, tb.* from(
		    	select ceNum, ceSubject
		        	from com_employ
		        	where cSerial=#{cSerial}
		        	<if test="searchValue!=null and searchValue!='' ">
	     				and instr(ceSubject, #{searchValue})&gt;=1
	     			</if>
	     			order by ceNum desc
		<![CDATA[
			)tb where rownum<=#{end}
		)where rnum>=#{start}
		]]>
	</select>
	
	<!-- 채용 정보 가져오기 -->
	<select id="readEmploy" parameterType="Integer" 
		resultType="com.final_project.company.Employ">
		select ceNum, ceSubject, cePeople, ceType, 
			to_char(ceStart, 'YYYY-MM-DD') ceStart, 
			to_char(ceEnd, 'YYYY-MM-DD') ceEnd, cePay, cePrefere, 
			ceEtc, resumeForm, ce.cSerial, atCode, ce.subCode, maCode, cePlace, cName,
			resumeFile, resumeOriginalName
			from com_employ ce
      		join sub_class sc on ce.subCode=sc.subCode
      		join company c on ce.cSerial=c.cSerial
			where ceNum=#{ceNum}
	</select>
	
	<!-- 채용 삭제 -->
	<delete id="deleteComEmploy">
		delete from com_employ
  			where ceNum=#{ceNum}
	</delete>
	
	<!-- 채용 수정 -->
	<update id="updateComEmploy" parameterType="com.final_project.company.Employ">
		update com_employ set ceSubject=#{ceSubject}, cePeople=#{cePeople}, ceType=#{ceType},
			ceStart=#{ceStart}, ceEnd=#{ceEnd}, cePay=#{cePay}, cePlace=#{cePlace}, 
			cePrefere=#{cePrefere}, ceEtc=#{ceEtc}, resumeForm=#{resumeForm}, 
			resumeFile=#{resumeFile, jdbcType=VARCHAR}, 
			resumeOriginalName=#{resumeOriginalName, jdbcType=VARCHAR}, atCode=#{atCode}, 
  			subCode=#{subCode}
  			where ceNum=#{ceNum}
	</update>
	
	<!-- 지원자 현황 리스트 -->
	<select id="listApplicant" 
		parameterType="map" resultType="com.final_project.company.Applicant">
		select * from(
			select rownum rrnum, tb.* from(
		    	select m.mId, a.rNum, ceNum, appDate, m.mName, m.mGender, p.proPhoto, p.proIntro from applicant a
			    	join resume r on a.rnum=r.rnum
			    	join member m on r.mid=m.mid
			    	left outer join profile p on p.mid=m.mid
			    	where ceNum=#{ceNum}
			    	<if test="order=='recent'">
						order by appDate desc
					</if>
					<if test="order=='name'">
						order by m.mName asc, appDate desc
					</if>
		<![CDATA[
			)tb where rownum<=#{end}
		)where rrnum>=#{start}
		]]>
	</select>
	
	<!-- 지원자 수 -->
	<select id="applicantCount" parameterType="Integer" resultType="Integer">
		select nvl(count(*), 0) from applicant
  			where ceNum=#{ceNum}
	</select>
	
	<!-- 지원자 현황 : 채용 리스트 -->
	<select id="applicantListEmploy" parameterType="String" resultType="com.final_project.company.Employ">
		select ceNum, ceSubject from com_employ
 			where cSerial=#{cSerial}
 			order by ceNum desc
	</select> 
	
	<!-- 기업명 리스트 -->
	<select id="listCompanyName" parameterType="map" resultType="com.final_project.company.Company">
		select cNum, cName from company
			where cNum>0
		<if test="searchCompany!=null and searchCompany!='' ">
			and instr(cName, #{searchCompany})&gt;=1
		</if>
	</select>
	
	<!--  -->
	<select id="searchCompanyName" parameterType="Integer" resultType="String">
		select cName from company
			where cNum=#{cNum}
	</select>
</mapper>















