<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="employ">
<!-- 직종 -->
<select id="list_sub_bu_class"
	            resultType="com.final_project.employ.Employ" parameterType="Integer">
	SELECT subcode, subname, macode FROM sub_bu_class
</select>

<select id="list_main_bu_class"
	            resultType="com.final_project.employ.Employ" parameterType="Integer">
	  SELECT macode,maname FROM main_bu_class
</select>

<!-- 직업 -->
<select id="list_sub_class"
	            resultType="com.final_project.employ.Employ" parameterType="Integer">
	SELECT subcode, subname, macode FROM sub_class
</select>

<select id="list_main_class"
	            resultType="com.final_project.employ.Employ" parameterType="Integer">
	  SELECT macode,maname FROM main_class
</select>
<!-- 자격증 -->
<select id="list_license"
	            resultType="com.final_project.employ.Employ" parameterType="Integer">
	  select liCode, license from license
</select>

<!-- 우대사항 -->
<select id="list_cePrefere"
	            resultType="com.final_project.employ.Employ" parameterType="Integer">
	  select DISTINCT cePrefere from com_employ
</select>

<!-- 근무조건 -->
<select id="list_ceType"
	            resultType="com.final_project.employ.Employ" parameterType="Integer">
	  select DISTINCT ceType from com_employ
</select>

<!-- 학력 -->
<select id="list_ability"
	            resultType="com.final_project.employ.Employ" parameterType="Integer">
	  select ability from ability_type
</select>

<!-- 검색 -->
<select id="dataCount" resultType="Integer">
	   SELECT NVL(COUNT(*), 0) FROM com_employ
</select>
<select id="list_com_employ"
				resultType="com.final_project.employ.Employ" parameterType="map">
			SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
			select ceNum, ceSubject, ability, ceType, ceStart, ceEnd, C.cSerial, cName, cLogoimage,C.cNum,cePeople,ceETC,cePay, TO_CHAR(SCN_TO_TIMESTAMP(ORA_ROWSCN),'YYYY-MM-DD') modyTime
			from com_employ CE
			JOIN ability_type A ON A.atCode = CE.atCode
			JOIN company C ON C.cSerial = CE.cSerial
			JOIN com_image CI ON C.cSerial=CI.cSerial
			JOIN sub_class L ON CE.subCode=L.subCode
			JOIN sub_bu_class B ON  C.subcode = B.subcode

			<!-- WHERE cePay &gt; #{startpay} AND cePay &lt; #{endpay} -->
			
			<trim prefix="WHERE" prefixOverrides="AND |OR "> 
			    <if test="startpay != null">
			        AND TO_NUMBER(substr(cePay,1,4)) &gt; #{startpay}
			    </if>
			    <if test="endpay != null">
			        AND TO_NUMBER(substr(cePay,6,4)) &lt; #{endpay}
			    </if>
			    <if test="cePrefere!='우대사항'">
			        AND INSTR(cePrefere, #{cePrefere}) &gt; 0
			    </if>
			    <if test="ceType!='근무조건'">
			        AND INSTR(ceType, #{ceType}) &gt; 0
			    </if>
			    <if test="ability!='학력'">
			        AND INSTR(ability, #{ability}) &gt; 0
			    </if>
			    <if test="subname!='2차직종'">
			        AND INSTR(L.subname, #{subname}) &gt; 0
			    </if>
			    <if test="search!=''">
			        AND INSTR(ceSubject, #{search}) &gt; 0 OR INSTR(cName, #{search}) &gt; 0
			    </if>
			    <!-- <if test="subname!='2차업종'">
			        AND INSTR(B.subname, #{subname}) &gt; 0
			    </if> -->
			    <if test="sdate != ''">
			        AND ceStart &gt; #{sdate}
			    </if>
			    <if test="edate != ''">
			        AND ceEnd &lt; #{edate}
			    </if>
			    <if test="cePlace != '지역'">
			        AND INSTR(cePlace, #{cePlace}) &gt; 0
			    </if>
			    <!-- <if test="license!='자격증'">
			        AND INSTR(license, #{license}) &gt; 0
			    </if> -->
		  	</trim>
			
						<![CDATA[
	        ) tb WHERE ROWNUM <= #{end}
	    ) WHERE rnum >= #{start}
	]]>
</select>

<select id="read_com_employ"
				parameterType="Integer" resultType="com.final_project.employ.Employ">
	select ceNum,cNum, ceSubject, ability, ceType, ceStart, ceEnd, C.cSerial, cName, cLogoimage,cePay,subName,cePrefere,cePeople,ceETC, TO_CHAR(SCN_TO_TIMESTAMP(ORA_ROWSCN),'YYYY-MM-DD') modyTime,cePlace,cAddress
			from com_employ CE
			JOIN ability_type A ON A.atCode = CE.atCode
			JOIN company C ON C.cSerial = CE.cSerial
			JOIN com_image CI ON C.cSerial=CI.cSerial
      JOIN sub_class L ON CE.subCode=L.subCode
      where ceNum=#{ceNum}
</select>


<select id="read_resume"
				resultType="com.final_project.employ.Resume" parameterType="String">
	select rNum, rName,apply,pay,addr,addr2,hopelocation,phone,email from resume where mid=#{mId}
</select>

<insert id="apply_resume" parameterType="map">
	INSERT INTO applicant(rNum, ceNum) VALUES(#{rNum},#{ceNum})
</insert>

<insert id="add_scrap" parameterType="map">
	INSERT INTO scrap(ceNum,scrapDate, mId) VALUES(#{ceNum},sysdate,#{mId})
</insert>

<!-- 메인출력 지원자수포함 -->
<select id="list_applicant_rank" resultType="com.final_project.employ.Employ">
SELECT ROWNUM rnum, tb.* FROM (
select E.cenum,ceType,ceSubject,cePay, ceEnd ,cname, c.cSerial, cNum,cLogoimage,subname , ROW_NUMBER() OVER(ORDER BY count(E.cenum) desc) rank, count(E.cenum) applicant_count  
from com_employ E
JOIN sub_class SC ON SC.subcode = E.subcode
JOIN company C ON C.cSerial = E.cSerial
JOIN com_image CI ON C.cSerial=CI.cSerial
JOIN applicant A ON A.cenum = E.cenum 
GROUP BY E.ceNum,ceType,ceSubject,cePay,ceEnd,cname,c.cSerial,subname,cNum,cLogoimage
)tb WHERE ROWNUM &lt; 4				
				
</select>

</mapper>