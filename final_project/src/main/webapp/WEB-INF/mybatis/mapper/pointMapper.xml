<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="point">
	<!-- intro -->
	<select id="bbsDataCount" resultType="Integer">
		select nvl(count(*), 0) from point_intro
	</select>
	
	<select id="selectBbsList" parameterType="map" resultType="com.final_project.point.Point">
		select poNum, subject, content, created, mname from(
			select rownum rnum, tb.* from(
				select poNum, subject, content, to_char(created, 'YYYY-MM-DD') created, mname 
				from point_intro pi
				join member m on pi.mid=m.mid
				order by poNum desc
			)tb where <![CDATA[rownum <= #{end}
		)where rnum >= #{start}]]>
	</select>
	
	<select id="readBoard" parameterType="map" resultType="com.final_project.point.Point">
		select poNum, subject, content, to_char(created, 'YYYY-MM-DD') created, mname 
		from point_intro pi
		join member m on pi.mid=m.mid
		where poNum=#{poNum}
	</select>
	
	<select id="preRead" parameterType="map" resultType="com.final_project.point.Point">
		select rownum, tb.* from( 
			select poNum, subject from point_intro
			where poNum <![CDATA[>]]> #{poNum} 
			order by poNum asc 
		) tb where rownum=1
	</select>
	
	<select id="nextRead" parameterType="map" resultType="com.final_project.point.Point">
		select rownum, tb.* from( 
			select poNum, subject from point_intro
			where poNum <![CDATA[<]]> #{poNum} 
			order by poNum desc 
		) tb where rownum=1
	</select>
	
	<insert id="insertBoard" parameterType="com.final_project.point.Point">
		insert into point_intro(poNum, subject, content, mId) 
		values(point_intro_seq.nextval, #{subject}, #{content}, #{mId})
	</insert>
	
	<update id="updateBoard" parameterType="com.final_project.point.Point">
		update point_intro set subject=#{subject}, content=#{content} where poNum=#{poNum}
	</update>
	
	<delete id="deleteBoard" parameterType="map">
		delete from point_intro where poNum=#{poNum}
	</delete>
	
	
	<!-- mypoint -->
	<select id="selectMypoint" parameterType="map" resultType="Integer">
		select mypoint from(
			select rownum rnum, tb.* from(
				select total mypoint from point 
				where mId=#{mId} and total!=0
				order by poNum desc
			)tb where rownum=1
		)
	</select>
	
	<select id="selectReserve" parameterType="map" resultType="Integer">
		select sum(point) 
		from point where mId=#{mId} and total=0 and classify='적립'
	</select>
	
	
	<!-- 포인트 검색 -->
	<sql id="where-list">
		<if test="(startDate!=null and startDate!='') and (endDate!=null and startDate!='')">
			<![CDATA[#{startDate} <= to_char(poDate, 'YYYYMMDD') 
			and to_char(poDate, 'YYYYMMDD') <= #{endDate}]]> 
		</if>
		<if test="(pointType!=null and pointType!='') and ((startDate!=null and startDate!='') and (endDate!=null and startDate!=''))">
			and 
		</if>
		<if test="pointType!=null and pointType!=''">
			classify=#{pointType}
		</if>
	</sql>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		select nvl(count(*), 0) from point 
		where mId=#{mId} and total!=0 
		<!-- 참 참 1번실행 / 참 거짓 3번실행 / 거짓 참 2번실행 / 거짓 거짓 실행 안됨  -->
	<if test="(pointType != null and pointType != '') or ((startDate != null and startDate != '') and (endDate != null and endDate != ''))">
		and <include refid="where-list" />
	</if>
	</select>
	
	<select id="selectPointList" parameterType="map" resultType="com.final_project.point.Point">
		select classify, history, poDate, point, total from(
			select rownum rnum, tb.* from(
				select classify, history, to_char(poDate, 'YYYY-MM-DD') poDate, point, total 
				from point
				where mId=#{mId} and total!=0
			<if test="(pointType != null and pointType != '') or ((startDate != null and startDate != '') and (endDate != null and endDate != ''))">
				and <include refid="where-list" />
			</if>
				order by poNum desc
			)tb where <![CDATA[rownum <= #{end}
		)where rnum >= #{start}]]>
	</select>
	
	<insert id="savePoint" parameterType="map">
		insert into point(poNum, classify, history, point, mid) 
		values(point_seq.nextval, #{classify}, #{history}, #{point}, #{mId})
	</insert>
	
	<insert id="usePoint" parameterType="map">
		insert into point(poNum, classify, history, point, total, mid) 
		values(point_seq.nextval, #{classify}, #{history}, #{point}, #{total}, #{mId})
	</insert>
	
	
	<insert id="buyResume" parameterType="map">
		insert into storagy(stNum, rNum, mid) 
		values(storagy_seq.nextval, #{rNum}, #{mId})
	</insert>
	
	<select id="totalId" parameterType="map" resultType="com.final_project.point.Point">
		<!-- total이 0인 1번rownum에 해당하는 mId -->
		select poNum, point, mId from(
			select rownum, tb.* from(
				select * from point 
				where mId=#{mId} 
				and total=0
				order by poNum asc
			)tb where rownum=1
		)
	</select>
	
	<select id="totalOne" parameterType="map" resultType="com.final_project.point.Point">
		<!-- 역순 rownum 1번의 total에 -->
		select total from(
			select rownum, tb.* from(select * from point 
				where mId=#{mId} 
				and total!=0
				order by poNum desc
			)tb where rownum=1
		)
	</select>
	
	<update id="total" parameterType="map">
		<!-- total이 0인 1번rownum에 point를 더하여 total에 넣음 -->
		update point set total=#{total} where poNum=#{poNum}
	</update>
	
	<select id="isPointEvent"  parameterType="map" resultType="Integer">
		select count(*) from(
			select to_char(poDate, 'YY/MM/DD') poDate from point 
			where classify='사용' and history='포인트 복권' and mId=#{mId}
		)where  poDate=to_char(sysdate, 'YY/MM/DD')
	</select>
	
	<insert id="entryPoint" parameterType="map">
		insert into point(poNum, classify, history, point, total, mid) 
		values(point_seq.nextval, #{classify}, #{history}, #{point}, #{point}, #{mId})
	</insert>
</mapper>