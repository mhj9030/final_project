<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="community_news">
	<insert id="insertNews" parameterType="com.final_project.community.News">
		INSERT INTO jobnews_bbs(jbnum, subject, content, mid, type, saveFilename, originalFilename) 
		VALUES (JOBNEWS_BBS_SEQ.NEXTVAL, #{subject}, #{content}, #{mId}, #{type}, 
				#{saveFilename, jdbcType=VARCHAR}, #{originalFilename, jdbcType=VARCHAR})
	</insert>
	
	<sql id="where-list">
	  <if test="searchKey=='subject'">
	       INSTR(subject, #{searchValue}) &gt; 0
	  </if>
	  <if test="searchKey=='content'">
	      DBMS_LOB.INSTR(content, #{searchValue}) &gt; 0 
	  </if>
	  <if test="searchKey=='created'">
	      TO_CHAR(b.created, 'YYYY-MM-DD') = #{searchValue}
          OR TO_CHAR(b.created, 'YYYYMMDD') = #{searchValue}
	  </if>
	</sql>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) FROM jobnews_bbs 
	    <where>
	     	<if test="searchValue!=null and searchValue!='' ">
	     	    <include refid="where-list"/>
	     	</if>
	     	<if test="type!=null and type!='' ">
	     		AND type=#{type}
	     	</if>
	     	<![CDATA[
	     		AND state = 0
	     	]]>
	    </where>  
	</select>
	
	<select id="listNews" parameterType="map" resultType="com.final_project.community.News">
		SELECT * FROM( 
			SELECT ROWNUM rnum, tb.* FROM(
				SELECT j.jbnum, m.mId, mname, subject, TO_CHAR(j.created, 'YYYY-MM-DD') created, type, 
					   hitCount, saveFilename, NVL(replyCount, 0) replyCount, NVL(likeCount, 0) likeCount  
				FROM jobnews_bbs j JOIN member m ON j.mId=m.mId 
				LEFT OUTER JOIN
				(
					SELECT jbnum, COUNT(*) replyCount FROM jobnews_re 
					WHERE answer=0 
					GROUP BY jbnum
				) r ON j.jbnum=r.jbnum 
				LEFT OUTER JOIN
				(
					SELECT jbnum, COUNT(*) likeCount FROM jobnews_like 
					GROUP BY jbnum
				) l ON j.jbnum=l.jbnum
				<where>
			     	<if test="searchValue!=null and searchValue!='' ">
			     	    <include refid="where-list"/>
			     	</if>
			     	<if test="type!=null and type!='' ">
	     				AND type=#{type}
	     			</if>
	     			<![CDATA[
	     				AND state = 0
	     			]]>
	    		</where>
	    		ORDER BY jbnum DESC
	<![CDATA[
           ) tb WHERE ROWNUM <= #{end}
       ) WHERE rnum >= #{start}
    ]]> 
	</select>
	
	<update id="updatehitCount" parameterType="Integer">
		UPDATE jobnews_bbs SET hitCount = hitCount + 1 WHERE jbnum = #{jbnum}
	</update>
	
	<select id="readNews" parameterType="Integer" resultType="com.final_project.community.News">
		SELECT j.jbnum, subject, content, created, hitCount, j.mId, mName, saveFilename, originalFilename, type	 
		FROM jobnews_bbs j JOIN member m ON j.mId=m.mId 
		WHERE jbnum = #{jbnum}	
	</select>
	
	<select id="preReadNews" parameterType="map" resultType="com.final_project.community.News">
		SELECT tb.* FROM(
			SELECT jbnum, subject 
			FROM jobnews_bbs j JOIN member m ON j.mId=m.mId 
			<where>
			     	<if test="searchValue!=null and searchValue!='' ">
			     	    <include refid="where-list"/>
			     	</if>
			     	<if test="type!=null and type!='' ">
	     				AND type=#{type}
	     			</if>
	     			<![CDATA[
		                 AND (jbnum > #{jbnum}) AND state = 0
		            ]]>
	    	</where>
	    	ORDER BY jbnum ASC
	    ) tb WHERE ROWNUM=1
	</select>
	
	<select id="nextReadNews" parameterType="map" resultType="com.final_project.community.News">
		SELECT tb.* FROM(
			SELECT j.jbnum, subject 
			FROM jobnews_bbs j JOIN member m ON j.mId=m.mId 
			<where>
			     	<if test="searchValue!=null and searchValue!='' ">
			     	    <include refid="where-list"/>
			     	</if>
			     	<if test="type!=null and type!='' ">
	     				AND type=#{type}
	     			</if>
	     			<![CDATA[
		                 AND (jbnum < #{jbnum}) AND state = 0
		            ]]>
	    	</where>
	    	ORDER BY jbnum DESC
	    ) tb WHERE ROWNUM=1
	</select>
	
	<update id="deleteNews" parameterType="Integer">
		UPDATE jobnews_bbs SET state = 1 WHERE jbnum=#{jbnum}
	</update>
	
	<update id="updateNews" parameterType="com.final_project.community.News">
		UPDATE jobnews_bbs SET subject=#{subject}, content=#{content}, 
							saveFilename=#{saveFilename, jdbcType=VARCHAR}, 
							originalFilename=#{originalFilename, jdbcType=VARCHAR},
							type=#{type}
							WHERE jbnum = #{jbnum}
	</update>
	
	<insert id="insertLikeNews" parameterType="com.final_project.community.News">
	INSERT INTO jobnews_like(jbnum, mId) VALUES (#{jbnum}, #{mId})
	</insert>

	<select id="countLikeNews" resultType="Integer" parameterType="Integer">
	   SELECT  NVL(COUNT(*), 0) countLikeNews
	        FROM jobnews_like WHERE jbnum=#{jbnum}
	</select>
	
	<insert id="insertReply" parameterType="com.final_project.community.NewsReply">
		INSERT INTO jobnews_re(replyNum, jbnum, mId, content, answer) 
		VALUES (JOBNEWS_RE_SEQ.NEXTVAL, #{jbnum}, #{mId}, #{content}, #{answer})
	</insert>
	
	<select id="replyDataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) replyCount FROM jobnews_re 
		WHERE jbnum = #{jbnum} AND answer = 0 
	</select>
	
	<select id="listReply" parameterType="map" resultType="com.final_project.community.NewsReply">
		SELECT * FROM (
			SELECT ROWNUM rnum, tb.* FROM(
				SELECT tbreply.replyNum, jbnum, mId, mName, content, created, 
						tbreply.answer, NVL(answerCount, 0) answerCount 
				FROM
				(
					(
						SELECT replyNum, r.jbnum, r.mId, mName, r.content, r.created, answer  
						FROM jobnews_re r JOIN member m ON r.mId=m.mId 
						WHERE jbnum = #{jbnum} AND answer = 0
					) tbreply
					LEFT OUTER JOIN
					(
						SELECT answer, COUNT(*) answerCount 
						FROM jobnews_re 
						GROUP BY answer 
					) tbanswer ON tbreply.replyNum=tbanswer.answer
				) 
				ORDER BY replyNum DESC
	<![CDATA[
			)tb WHERE ROWNUM <= #{end}
		) WHERE rnum >= #{start}
	]]>			
	</select>
	
	<delete id="deleteReply" parameterType="map">
		DELETE FROM jobnews_re WHERE
	    <if test="mode == 'jbnum' ">
			 jbnum=#{jbnum}
		</if>
	    <if test="mode == 'reply' ">
			 replyNum IN 
               (SELECT replyNum FROM jobnews_re START WITH  replyNum = #{replyNum}
	            CONNECT BY PRIOR replyNum = answer)
		</if>
	    <if test="mode == 'answer' ">
			 replyNum=#{replyNum}
		</if>
	</delete>

    <!-- 댓글별 답글 리스트 -->
	<select id="listReplyAnswer" resultType="com.final_project.community.NewsReply" parameterType="Integer">
     SELECT replyNum, jbnum, tbreply.mId, mName, content, created, answer
	          FROM jobnews_re tbreply 
	          JOIN member m ON tbreply.mId=m.mId
              WHERE answer=#{answer}
              ORDER BY replyNum DESC
	</select>
	
    <!-- 댓글별 답글 개수 -->
	<select id="replyCountAnswer" resultType="Integer" parameterType="Integer">
	   SELECT NVL(COUNT(*), 0)
	        FROM jobnews_re WHERE answer=#{answer}
	</select>
	
</mapper>