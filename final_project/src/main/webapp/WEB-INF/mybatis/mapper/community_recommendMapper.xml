<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="community_recommend">
	<insert id="insertRecommend" parameterType="com.final_project.community.RecommendArticle">
		INSERT INTO goodcom_bbs(gcnum, cnum, subject, content, grade, mId) 
		VALUES (GOODCOM_BBS_SEQ.NEXTVAL, #{cNum}, #{subject},#{content}, #{grade},#{mId})
	</insert>
	
	<sql id="where-list">
		<if test="searchValue!=null and searchValue!=''">
			INSTR(cName, #{searchValue})&gt;=1
		</if>
	</sql>
	
	
	<select id="dataCount_company" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) FROM company 
	    <where>
	     	<include refid="where-list"/>
	     	<![CDATA[
	     		AND cNum>0
	     	]]>	
	    </where>  
	</select>
	
	<select id="dataCount_goodcom_total" resultType="Integer">
		SELECT NVL(COUNT(*),0) FROM goodcom_bbs 
	</select>
	
	<select id="dataCount_goodcom" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) FROM goodcom_bbs 
		WHERE cNum = #{cNum}
	</select>
	
	
	<select id="listRecommend" parameterType="map" resultType="com.final_project.community.Recommend">
		SELECT * FROM( 
			SELECT ROWNUM rnum, tb.* FROM(
				SELECT c.cNum, cName, ci.cLogoImage, TO_CHAR(ccreated, 'YYYY-MM-DD') ccreated, NVL(gcCount, 0) gcCount, NVL(grade, 0) grade, NVL(employCount, 0) employCount 
		        	from company c
		          	join com_image ci on c.cSerial=ci.cSerial
                LEFT OUTER JOIN
                (
                  select cNum, count(*) gcCount, round(avg(grade),1) grade  FROM goodcom_bbs g
                  GROUP BY cNum
                ) gc ON c.cNum=gc.cNum
                LEFT OUTER JOIN
                (
                  SELECT cSerial,  COUNT(*) employCount FROM com_employ
                  GROUP BY cSerial
                ) ce ON c.cSerial=ce.cSerial
				<where>
					<include refid="where-list"/>
	    			<![CDATA[
	     				AND c.cNum>0
	     			]]>	 
	    		</where>
	    		ORDER BY cNum DESC
	<![CDATA[
           ) tb WHERE ROWNUM <= #{end}
       ) WHERE rnum >= #{start}
    ]]> 
	</select>
	<select id="listRecommendArticle" parameterType="map" resultType="com.final_project.community.RecommendArticle">
		SELECT * FROM( 
			SELECT ROWNUM rnum, tb.* FROM(
				SELECT g.gcNum, c.cName, subject, content, grade, created, g.mId, mName 
		        from goodcom_bbs g
		        join member m on g.mId = m.mId
		        join company c on g.cNum=c.cNum 
				WHERE g.cNum = #{cNum}
	    		ORDER BY gcNum DESC
	<![CDATA[
           ) tb WHERE ROWNUM <= #{end}
       ) WHERE rnum >= #{start}
    ]]> 
	</select>
	
	<select id="RecommendArticleInfo" parameterType="map" resultType="com.final_project.community.RecommendArticle">
		SELECT DISTINCT cp.cName, cp.cNum, NVL(gradeAvg, 0) gradeAvg , 
				NVL(grade1,0) grade1, NVL(grade2,0) grade2,
				NVL(grade3,0) grade3, NVL(grade4,0) grade4, NVL(grade5,0) grade5 
		FROM goodcom_bbs g JOIN company c ON g.cNum = c.cNum
		RIGHT OUTER JOIN
		(
			SELECT cNum, cName FROM company 
			WHERE cNum = #{cNum}
		)cp ON g.cNum = cp.cNum 
		LEFT OUTER JOIN
        (
        	SELECT cNum, round(avg(grade),1) gradeAvg FROM goodcom_bbs 
			WHERE cNum = #{cNum} 
			GROUP BY cNUM
        ) ga ON g.cNum=ga.cNum
        LEFT OUTER JOIN
        (
        	SELECT cNum, NVL(COUNT(grade),0) grade1 FROM goodcom_bbs 
			WHERE cNum=#{cNum} AND grade = 1
			GROUP BY cNUM
        )g1 ON g.cNum = g1.cNum
        LEFT OUTER JOIN
        (
        	SELECT cNum, NVL(COUNT(grade),0) grade2 FROM goodcom_bbs 
			WHERE cNum=#{cNum} AND grade = 2
			GROUP BY cNUM
        )g2 ON g.cNum = g2.cNum
        LEFT OUTER JOIN
        (
        	SELECT cNum, NVL(COUNT(grade),0) grade3 FROM goodcom_bbs 
			WHERE cNum=#{cNum} AND grade =3
			GROUP BY cNUM
        )g3 ON g.cNum = g3.cNum
        LEFT OUTER JOIN
        (
        	SELECT cNum, NVL(COUNT(grade),0) grade4 FROM goodcom_bbs 
			WHERE cNum=#{cNum} AND grade = 4
			GROUP BY cNUM
        )g4 ON g.cNum = g4.cNum
        LEFT OUTER JOIN
        (
        	SELECT cNum, NVL(COUNT(grade),0) grade5 FROM goodcom_bbs 
			WHERE cNum=#{cNum} AND grade = 5
			GROUP BY cNUM
        )g5 ON g.cNum = g5.cNum
	</select>
	
	
	<select id="dataCountEmploy" parameterType="Integer" resultType="Integer">
		SELECT NVL(employCount,0) employCount FROM company c 
		LEFT OUTER JOIN
        (
        	SELECT cSerial,  COUNT(*) employCount FROM com_employ
       		GROUP BY cSerial
        ) ce ON c.cSerial=ce.cSerial
        WHERE cNUM = #{cNum}
	</select>
	
	<select id="readRecommendContent" parameterType="Integer" resultType="com.final_project.community.RecommendArticle">
		SELECT g.content, g.subject, m.mName, g.gcNum, g.mId, g.cNum, c.cName FROM goodcom_bbs g 
		JOIN member m ON g.mId = m.mId 
		JOIN company c ON g.cNum = c.cNum
		WHERE gcNum = #{gcNum} 
	</select>
	
	
	<update id="deleteRecommend" parameterType="Integer">
		DELETE FROM goodcom_bbs WHERE gcNum=#{gcNum}
	</update>
	
	<update id="updateRecommend" parameterType="com.final_project.community.RecommendArticle">
		UPDATE goodcom_bbs SET subject=#{subject}, content=#{content}, grade=#{grade} 
							WHERE gcNum = #{gcNum}
	</update>
	
	
		
</mapper>